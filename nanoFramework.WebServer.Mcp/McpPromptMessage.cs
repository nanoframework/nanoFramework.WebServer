// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

namespace nanoFramework.WebServer.Mcp
{
    /// <summary>
    /// Represents a message within the Model Context Protocol (MCP) system, used for communication between clients and AI models.
    /// </summary>
    /// <remarks>
    /// <para>
    /// A <see cref="PromptMessage"/> encapsulates content sent to or received from AI models in the Model Context Protocol.
    /// Each message has a specific role (<see cref="Role.User"/> or <see cref="Role.Assistant"/>) and contains content which can be text.
    /// </para>
    /// <para>
    /// It serves as a core data structure in the MCP message exchange flow, particularly in prompt formation and model responses.
    /// </para>
    /// </remarks>
    public sealed class PromptMessage
    {
        /// <summary>
        /// Gets or sets the text content of the message.
        /// </summary>
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets the role of the message sender, specifying whether it's from a "user" or an "assistant".
        /// </summary>
        /// <remarks>
        /// In the Model Context Protocol, each message must have a clear role assignment to maintain
        /// the conversation flow. User messages represent queries or inputs from users, while assistant
        /// messages represent responses generated by AI models.
        /// </remarks>
        public Role Role { get; set; } = Role.User;

        /// <summary>
        /// Initializes a new instance of the <see cref="PromptMessage"/> class with this prompt text.
        /// </summary>
        /// <param name="text">The text content of the message.</param>
        public PromptMessage(string text)
        {
            Text = text;
        }

        /// <inheritdoc/>
        public override string ToString()
        {
            return $"{{\"role\":\"{RoleToString(Role)}\",\"content\":{{\"type\": \"text\",\"text\":\"{Text}\"}}}}";
        }

        private static string RoleToString(Role role)
        {
            return role == Role.User ? "user" : "assistant";
        }
    }
}
